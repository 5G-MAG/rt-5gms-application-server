#!/bin/sh
#
# 5G-MAG Reference Tools: 5GMS Application Server
# ===============================================
#
# File: generate_5gms_as_openapi
# License: 5G-MAG Public License (v1.0)
# Author: David Waring
# Copyright: (C) 2022 British Broadcasting Corporation
#
# For full license terms please see the LICENSE file distributed with this
# program. If this file is missing then the license can be retrieved from
# https://drive.google.com/file/d/1cinCiA778IErENZ3JN52VFW-1ffHpx7Z/view
#
# This will use the common script from the rt-common-shared respository
# (5gms/scripts/generate_openapi) to generate the python OpenAPI bindings for
# the 5G APIs. 
#

scriptname=`basename "$0"`
scriptdir=`dirname "$0"`
scriptdir=`cd "$scriptdir"; pwd`

rt_5gms_as_dir=`cd "${scriptdir}/../src/rt_5gms_as"; pwd`
common_scripts_dir=`cd "${scriptdir}/../external/rt-common-shared/5gms/scripts"; pwd`
fiveg_apis_overrides=`cd "$common_scripts_dir/../5G_APIs-overrides"; pwd`

# Command line defaults
default_api='TS26512_M1_ContentHostingProvisioning M3_merged'
default_branch='REL-17'

if [ ! -e "${scriptdir}/openapi-generator-config.yaml" -o "${scriptdir}/openapi-generator-config.yaml" -ot "${scriptdir}/openapi-generator-config.yaml.in" ]; then
    sed 's/@build_scripts_dir@/'"${scriptdir//\//\\\/}"'/' "${scriptdir}/openapi-generator-config.yaml.in" > "${scriptdir}/openapi-generator-config.yaml"
fi

ARGS=`getopt -n "$scriptname" -o 'a:b:h' -l 'api:,branch:,help' -s sh -- "$@"`

if [ $? -ne 0 ]; then
    print_syntax >&2
    exit 1
fi

print_syntax() {
    echo "Syntax: $scriptname [-h] [-b <release-branch>] [-a <API-name>]"
}

print_help() {
    cat <<EOF
Download 5G OpenAPI and generate python bindings

This script will download the 5G APIs and openapi-generator-cli tool and uses
them to create Python modules which will parse and generate a given API
structures.

EOF
    print_syntax
    cat <<EOF

Options:
  -h         --help           Show this help message and exit.
  -a API     --api API        The OpenAPI interface to generate the bindings
                              from.
                              [default: $default_api]
  -b BRANCH  --branch BRANCH  Use the given branch of the 5G_APIs repository.
                              [default: $default_branch]
EOF
}

eval set -- "$ARGS"
unset ARGS

API="$default_api"
BRANCH="$default_branch"

while true; do
    case "$1" in
    -a|--api)
	API="$2"
	shift 2
	continue
	;;
    -b|--branch)
	BRANCH="$2"
	shift 2
	continue
	;;
    -h|--help)
	print_help
	exit 0
	;;
    --)
	shift
	break
	;;
    *)
	echo "Error: Command line argument \"$1\" unexpected" >&2
	print_syntax >&2
	exit 1
	;;
    esac
done

if [ $# -gt 0 ]; then
    echo "Error: Command line argument \"$1\" unexpected" >&2
    print_syntax >&2
    exit 1
fi

if [ ! -d "${rt_5gms_as_dir}/openapi_5g" ]; then
    mkdir -p "${rt_5gms_as_dir}/openapi_5g"
    tmpdir=`mktemp -d --tmpdir openapi-5gms-as-generator.XXXXXXXX`
    trap "rm -rf '$tmpdir'" 0 1 2 3 4 5 6 7 8 10 11 12 13 14
    "$common_scripts_dir/generate_openapi" -a "$API" -b "$BRANCH" -l python-fastapi:packageName=rt_5gms_as.openapi_5g,projectName=openapi-5g,title=openapi5g -d "$tmpdir" -o "${fiveg_apis_overrides}:${scriptdir}" -c "${scriptdir}/openapi-generator-config.yaml"
    ls -lR "$tmpdir"
    cp -rv "$tmpdir/src/rt_5gms_as/openapi_5g" "$rt_5gms_as_dir/"
fi

exit 0
